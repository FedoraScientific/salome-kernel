#  Copyright (C) 2007-2008  CEA/DEN, EDF R&D, OPEN CASCADE
#
#  Copyright (C) 2003-2007  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
#  CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
#  See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
#
#  PLEASE DO NOT MODIFY configure.in FILE
#  ALL CHANGES WILL BE DISCARDED BY THE NEXT
#  build_configure COMMAND
#  CHANGES MUST BE MADE IN configure.in.base FILE
# Author : Marc Tajchman (CEA)
# Date : 28/06/2001
# Modified by : Patrick GOLDBRONN (CEA)
# Modified by : Marc Tajchman (CEA)
# Created from configure.in.base
#
AS_SHELL_SANITIZES
AC_INIT(src)
AC_CONFIG_AUX_DIR(salome_adm/unix/config_files)
AC_CANONICAL_HOST

PACKAGE=salome
AC_SUBST(PACKAGE)

VERSION=3.2.1
AC_SUBST(VERSION)
XVERSION=0x030201
AC_SUBST(XVERSION)

# set up MODULE_NAME variable for dynamic construction of directories (resources, etc.)
MODULE_NAME=kernel
AC_SUBST(MODULE_NAME)

dnl
dnl Initialize source and build root directories
dnl

ROOT_BUILDDIR=`pwd`
ROOT_SRCDIR=`echo $0 | sed -e "s,[[^/]]*$,,;s,/$,,;s,^$,.,"`
cd $ROOT_SRCDIR
ROOT_SRCDIR=`pwd`
cd $ROOT_BUILDDIR

AC_SUBST(ROOT_SRCDIR)
AC_SUBST(ROOT_BUILDDIR)
dnl ##########################################################
AC_SUBST(KERNEL_ROOT_DIR)
dnl ##########################################################


echo
echo Source root directory : $ROOT_SRCDIR
echo Build  root directory : $ROOT_BUILDDIR
echo
echo

dnl Modification B. Secher portage sur osf
AC_CHECK_PROG(SHELL,sh)
AC_SUBST(SHELL)

if test -z "$AR"; then
   AC_CHECK_PROGS(AR,ar xar,:,$PATH)
fi
AC_SUBST(AR)

dnl Export the AR macro so that it will be placed in the libtool file
dnl correctly.
export AR

echo
echo ---------------------------------------------
echo testing make
echo ---------------------------------------------
echo

AC_PROG_MAKE_SET
AC_PROG_INSTALL
dnl 
dnl libtool macro check for CC, LD, NM, LN_S, RANLIB, STRIP + pour les librairies dynamiques !

AC_ENABLE_DEBUG(yes)
AC_DISABLE_PRODUCTION

echo ---------------------------------------------
echo testing libtool
echo ---------------------------------------------

dnl first, we set static to no!
dnl if we want it, use --enable-static
AC_ENABLE_STATIC(no)

AC_LIBTOOL_DLOPEN
AC_PROG_LIBTOOL

dnl Fix up the INSTALL macro if it s a relative path. We want the
dnl full-path to the binary instead.
case "$INSTALL" in
   *install-sh*)
      INSTALL="${ROOT_SRCDIR}/salome_adm/unix/config_files/install-sh -c"
      ;;
esac

echo
echo ---------------------------------------------
echo testing C/C++
echo ---------------------------------------------
echo

cc_ok=no
dnl inutil car libtool
dnl AC_PROG_CC
AC_PROG_CXX
AC_CXX_WARNINGS
AC_CXX_TEMPLATE_OPTIONS
AC_DEPEND_FLAG
# AC_CC_WARNINGS([ansi])
cc_ok=yes

dnl Library libdl :
AC_CHECK_LIB(dl,dlopen)

dnl Library librt : for alpha/osf
AC_CHECK_LIB(rt,nanosleep)

dnl add library libm :
AC_CHECK_LIB(m,ceil)

AC_CXX_USE_STD_IOSTREAM
AC_CXX_HAVE_SSTREAM

dnl
dnl ---------------------------------------------
dnl testing linker
dnl ---------------------------------------------
dnl

AC_LINKER_OPTIONS

echo
echo ---------------------------------------------
echo testing threads
echo ---------------------------------------------
echo

ENABLE_PTHREADS

dnl
dnl ---------------------------------------------
dnl testing WITHIHM
dnl ---------------------------------------------
dnl

CHECK_WITHIHM

echo
echo ---------------------------------------------
echo BOOST Library
echo ---------------------------------------------
echo

CHECK_BOOST

dnl
dnl ---------------------------------------------
dnl testing MPI
dnl ---------------------------------------------
dnl

CHECK_MPI

dnl
dnl ---------------------------------------------
dnl testing sockets
dnl ---------------------------------------------
dnl

CHECK_SOCKETS

dnl
dnl ---------------------------------------------
dnl testing OpenPBS
dnl ---------------------------------------------
dnl

echo
echo ---------------------------------------------
echo testing OpenPBS
echo ---------------------------------------------
echo

openpbs_ok=no
CHECK_OPENPBS
dnl openpbs_ok is set to yes by CHECK_OPENPBS

dnl
dnl ---------------------------------------------
dnl testing LSF
dnl ---------------------------------------------
dnl

echo
echo ---------------------------------------------
echo testing LSF
echo ---------------------------------------------
echo

lsf_ok=no
CHECK_LSF
dnl lsf_ok is set to yes by CHECK_LSF

dnl
dnl ---------------------------------------------
dnl testing Batch
dnl ---------------------------------------------
dnl

WITH_BATCH=no
test x$openpbs_ok = xyes || test x$lsf_ok = xyes && WITH_BATCH=yes
AC_SUBST(WITH_BATCH)

echo
echo ---------------------------------------------
echo testing LEX \& YACC
echo ---------------------------------------------
echo

lex_yacc_ok=no
AC_PROG_YACC
AC_PROG_LEX
lex_yacc_ok=yes

echo
echo ---------------------------------------------
echo testing python
echo ---------------------------------------------
echo

CHECK_PYTHON

dnl echo
dnl echo ---------------------------------------------
dnl echo testing java
dnl echo ---------------------------------------------
dnl echo

dnl CHECK_JAVA

echo
echo ---------------------------------------------
echo testing swig
echo ---------------------------------------------
echo

CHECK_SWIG

echo
echo ---------------------------------------------
echo testing omniORB
echo ---------------------------------------------
echo

CHECK_OMNIORB

dnl echo
dnl echo ---------------------------------------------
dnl echo testing mico
dnl echo ---------------------------------------------
dnl echo

dnl CHECK_MICO

echo
echo ---------------------------------------------
echo default ORB : omniORB
echo ---------------------------------------------
echo

DEFAULT_ORB=omniORB
CHECK_CORBA

AC_SUBST_FILE(CORBA)
corba=make_$ORB
CORBA=salome_adm/unix/$corba


echo
echo ---------------------------------------------
echo testing QT
echo ---------------------------------------------
echo

CHECK_QT

echo
echo ----------------------------------------------
echo testing CPPUNIT only required for unit testing
echo ----------------------------------------------
echo

CHECK_CPPUNIT

if test "X$WITHIHM" = "Xyes"; then
	echo
	echo ---------------------------------------------
	echo Testing sip
	echo ---------------------------------------------
	echo

	CHECK_SIP

	echo
	echo ---------------------------------------------
	echo testing openGL
	echo ---------------------------------------------
	echo

	CHECK_OPENGL

	echo
	echo ---------------------------------------------
	echo testing VTK
	echo ---------------------------------------------
	echo

	CHECK_VTK

	echo
	echo ---------------------------------------------
	echo Testing pyqt
	echo ---------------------------------------------
	echo

	CHECK_PYQT

	echo
	echo ---------------------------------------------
	echo Testing qwt
	echo ---------------------------------------------
	echo

	CHECK_QWT
fi

echo
echo ---------------------------------------------
echo testing HDF5
echo ---------------------------------------------
echo

CHECK_HDF5

echo
echo ---------------------------------------------
echo Testing OpenCascade
echo ---------------------------------------------
echo

CHECK_CAS

echo
echo ---------------------------------------------
echo Testing html generators
echo ---------------------------------------------
echo

CHECK_HTML_GENERATORS

echo
echo ---------------------------------------------
echo Summary
echo ---------------------------------------------
echo

echo Configure
variables="cc_ok boost_ok lex_yacc_ok mpi_ok python_ok swig_ok threads_ok OpenGL_ok qt_ok vtk_ok hdf5_ok omniORB_ok occ_ok sip_ok pyqt_ok qwt_ok doxygen_ok graphviz_ok"
 
for var in $variables
do
   eval toto=\$$var
   if test x$toto != "x"; then
     printf "   %10s : " `echo \$var | sed -e "s,_ok,,"`
     eval echo \$$var
   fi
done
echo "---Optional:"
variables="cppunit_ok openpbs_ok lsf_ok"
 
for var in $variables
do
   eval toto=\$$var
   if test x$toto != "x"; then
     printf "   %10s : " `echo \$var | sed -e "s,_ok,,"`
     eval echo \$$var
   fi
done

echo
echo "Default ORB   : $DEFAULT_ORB"
echo

dnl generals files which could be included in every makefile

AC_SUBST_FILE(COMMENCE) COMMENCE=salome_adm/unix/make_commence
AC_SUBST_FILE(CONCLUDE) CONCLUDE=salome_adm/unix/make_conclude
AC_SUBST_FILE(MODULE) MODULE=salome_adm/unix/make_module

dnl les dependences
AC_SUBST_FILE(DEPEND) DEPEND=salome_adm/unix/depend

dnl We don t need to say when we re entering directories if we re using
dnl GNU make becuase make does it for us.
if test "X$GMAKE" = "Xyes"; then
   AC_SUBST(SETX) SETX=":"
else
   AC_SUBST(SETX) SETX="set -x"
fi

# make other build directories
for rep in salome_adm adm_local doc bin/salome include/salome lib${LIB_LOCATION_SUFFIX}/salome share/salome/resources/${MODULE_NAME} idl
#   if test ! -d $rep ; then
#      eval mkdir $rep
#   fi
    $INSTALL -d $rep
done

echo 
echo ---------------------------------------------
echo copying resource files, shell scripts, and 
echo xml files
echo ---------------------------------------------
echo


dnl copy resources directories

#for i in `find $ROOT_SRCDIR -name 'resources' -print`
#do
#  local_res=`echo $i | sed -e "s,$ROOT_SRCDIR,.,"`
#  local_res_dir=`echo $local_res | sed -e "s,[[^/]]*$,,;s,/$,,;s,^$,.,"`
#  mkdir -p $local_res_dir
#  cd $local_res_dir
#  ln -fs $i
#  echo $local_res
#  cd $ROOT_BUILDDIR
#done

dnl copy shells and utilities contained in the bin directory
dnl excluding .in files (treated in AC-OUTPUT below) and CVS 
dnl directory

mkdir -p bin/salome
cd bin/salome
for i in  `find $ROOT_SRCDIR/bin`
do
  local_bin=`echo $i | sed -e "s,$ROOT_SRCDIR/bin,.,"`
  case "$local_bin" in
        *.in | *~) ;;
        . | */CVS | */CVS/* | ./salome) ;;
        ./appliskel |./appliskel/env.d) $INSTALL -d $local_bin ; echo $local_bin ;;
        *) $INSTALL $i $local_bin; echo $local_bin ;;
  esac
done
cd $ROOT_BUILDDIR

AC_SUBST_FILE(ENVSCRIPT) ENVSCRIPT=salome_adm/unix/envScript

dnl copy xml files to the build tree (lib directory)
dnl pourquoi ????

#cd lib
#for i in `find $ROOT_SRCDIR -name "*.xml" -print`
#do
#  ln -fs $i
#  echo `echo $i | sed -e "s,$ROOT_SRCDIR,.,"`
#done
#cd $ROOT_BUILDDIR

echo
echo ---------------------------------------------
echo generating Makefiles and configure files
echo ---------------------------------------------
echo

AC_OUTPUT_COMMANDS([ \
	chmod +x ./bin/*; \
	chmod +x ./bin/salome/* \
])

## do not delete this line

