# Copyright (C) 2007-2012  CEA/DEN, EDF R&D, OPEN CASCADE
#
# Copyright (C) 2003-2007  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
# CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
#

# -* Makefile *- 
# Author : Patrick GOLDBRONN (CEA)
# Date : 28/06/2001
# $Header$
# source path
#
top_srcdir=@top_srcdir@
top_builddir=.
srcdir=@srcdir@
VPATH=.:@srcdir@:@top_srcdir@/bin:./bin/salome:@top_srcdir@/resources:./bin:@top_srcdir@/idl


@COMMENCE@

SUBDIRS = idl src doc salome_adm

RESOURCES_FILES = \
CatalogDataType.xml \
KERNELCatalog.xml \
CatalogResources.xml \
close.png \
config \
channel.cfg \
SALOMEDS_Resources

BIN_SCRIPT= \
runIDLparser \
VERSION \
orbmodule.py \
runSalome.py \
killSalome.py \
killSalomeWithPort.py \
runSalome \
runSalome.csh \
runNS.sh \
createAppli.sh \
launchConfigureParser.py \
salome.launch \
envSalome.py \
salomeConsole.py \
showNS.py \
addToKillList.py

# copy header files in common directory
include_list=\
	include/salome/SALOMEconfig.h

inc: idl $(include_list)

include/salome/SALOMEconfig.h: salome_adm/unix/SALOMEconfig.ref
	-$(RM) $@
	$(LN_S) ../../$< $@

# test if SALOMEconfig.h has changed (contents)
salome_adm/unix/SALOMEconfig.ref: salome_adm/unix/SALOMEconfig.h
	@if ! [ -a $@ ]; then \
	  cp -p $< $@;        \
	fi;		      \
	if ! cmp $< $@; then  \
	  cp -p $< $@;        \
	fi;		      \

depend: depend_idl

depend_idl:
	(cd idl ; $(MAKE) $@) || exit 1

# doc is already build : if you want to had documents, go manually to doc and run 'make doc'


DOCFILES=\
	README.FIRST.html

rstdoc: $(DOCFILES)
	(cd doc && $(MAKE) $@) || exit 1


# Install make_commence make_conclude ... for other modules
install-make:
	($(INSTALL) -d  $(incmakedir) || exit 1);
	(sed 's/^prefix=/#prefix=/' $(top_builddir)/salome_adm/unix/make_commence > $(incmakedir)/make_commence || exit 1);
	(sed 's/^prefix=/#prefix=/' $(top_builddir)/salome_adm/unix/make_conclude > $(incmakedir)/make_conclude || exit 1);


install-end:
# finish libtool install
#	@$(LT) --mode=finish $(libdir)

install-include: $(include_list)
	$(INSTALL) -d  $(includedir)
	@for f in X $(include_list); do				\
	   if test $$f != X; then				\
	     (cp -p $$f $(includedir) || exit 1);		\
	   fi;							\
	done

# install script in $(bindir) :
install-appliskel:
	$(INSTALL) -d  $(bindir)
	if test -d $(top_builddir)/bin/salome/appliskel; then		\
	    cp -rp $(top_builddir)/bin/salome/appliskel $(bindir);	\
	fi;

install-bin: $(BIN_SCRIPT)
	$(INSTALL) -d  $(bindir)
	$(INSTALL_PROGRAM) $^ $(bindir)

# install Plugin file
install-plugin: $(top_builddir)/share/salome/resources/Plugin
	($(INSTALL_DATA) $^ $(datadir)/resources/. || exit 1); \

uninstall: uninstall-idl

uninstall-idl:
	$(RM) $(idldir)/*.idl

distclean: distclean-other

distclean-other:
	-$(RM) salome_adm/unix/*~ salome_adm/unix/*% salome_adm/unix/*.bak salome_adm/unix/*.new salome_adm/unix/*.old
	-$(RM) salome_adm/unix/make_* 
	-$(RM) salome_adm/unix/depend salome_adm/unix/SALOMEconfig.h 
	-$(RM) config.cache config.log config.status 

@MODULE@

$(top_builddir)/share/salome/resources/Plugin: resources/Plugin
	cp -f $< $@ ; \

resources: $(top_builddir)/share/salome/resources/Plugin

install: install-bin install-appliskel install-include install-make install-plugin install-end
