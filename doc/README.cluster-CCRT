Copyright (C) 2007-2016  CEA/DEN, EDF R&D, OPEN CASCADE

Copyright (C) 2003-2007  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com

OverView
========

That describes how to start Salome without IHM in "terminal" mode.

With that "terminal" mode Salome may be started in "Batch" mode.

And one or more python scripts may be executed

Warnings
========

The list of needed modules must be explicited with --modules option

It is not possible to use embbedded components, so we must use --standalone option

After the python script(s) listed in the --terminal option, ",killall" should
be added : so the processes of Salome will be killed after the execution of
the python script(s).


Examples
========

Sans IHM sans execution de script python (for interactive testing and developping) :
---------------------------------------------

runSalome --terminal --modules=KERNEL,MED,CALCULATOR,COMPONENT --containers=cpp,python --standalone=registry,study,moduleCatalog,cppContainer --killall --logger

Sans IHM avec execution de script(s) python :
---------------------------------------------

runSalome --terminal=CALCULATOR_TEST --modules=KERNEL,MED,CALCULATOR,COMPONENT --containers=cpp,python --standalone=registry,study,moduleCatalog,cppContainer --killall --logger

runSalome --terminal=CALCULATOR_TEST_WITHOUTIHM --modules=KERNEL,MED,CALCULATOR,COMPONENT --containers=cpp,python --standalone=registry,study,moduleCatalog,cppContainer --killall --logger

runSalome --terminal=CALCULATOR_TEST_STUDY_WITHOUTIHM --modules=KERNEL,MED,CALCULATOR,COMPONENT --containers=cpp,python --standalone=registry,study,moduleCatalog,cppContainer --killall --logger

runSalome --terminal=CALCULATOR_TEST_WITHOUTIHM,CALCULATOR_TEST_STUDY_WITHOUTIHM --modules=KERNEL,MED,CALCULATOR,COMPONENT --containers=cpp,python --standalone=registry,study,moduleCatalog,cppContainer --killall --logger

runSalome --terminal=CALCULATOR_TEST,killall --modules=KERNEL,MED,CALCULATOR,COMPONENT --containers=cpp,python --standalone=registry,study,moduleCatalog,cppContainer --killall --logger
after the import of CALCULATOR_TEST, killall will be executed.


===================================================
Example for starting Salome in Batch mode on CCRT :
===================================================

Create a shell file "runSalome.batch" with for example :
--------------------------------------------------------
#BSUB -n 10
#BSUB -o runSalome.log%J
#BSUB -c 0:10
runSalome --terminal=CALCULATOR_TEST,killall --modules=KERNEL,MED,CALCULATOR,COMPONENT --containers=cpp,python --standalone=registry,study,moduleCatalog,cppContainer --killall
exit

Queue for execution that file (here runSalome.batch) :
--------------------------------------------------------------------
bsub < runSalome.batch

See the "bsub" documentation for details (or "man bsub")

