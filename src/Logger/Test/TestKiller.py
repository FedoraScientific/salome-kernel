
import sys, os,signal,string,commands

def killNamingService():
    """
    kills omniORB4 Naming Service on local machine.
    Selects process corresponding to the port used in $OMNIORB_CONFIG file.
    Works only with a single line $OMNIORB_CONFIG like
    InitRef = NameService=corbaname::<hostname>:<port>
    """
    fic=os.environ['OMNIORB_CONFIG']
    f=open(fic,'r')
    line=f.readline()
    f.close()
    port=string.split(line,':')[-1][0:4]
    command='ps -eo pid,command | grep "omniNames -start '+str(port)+'"'
    pid=string.split(commands.getoutput(command))[0]
    os.kill(int(pid),signal.SIGKILL)


def killProcess(process_id):
    """
    kills process on local machine, given a dictionary of running process
    generated by runSalome.Server() class and derived, (method run).
    kills also local Naming server.
    """
    for pid, cmd in process_id.items():
        print "stop process %s : %s"% (pid, cmd[0])
        try:
            os.kill(int(pid),signal.SIGKILL)
        except:
            print "  ---- process %s : %s inexistant"% (pid, cmd[0])
            pass
        del process_id[pid]
        pass
    killNamingService()
