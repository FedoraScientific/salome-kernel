//  Copyright (C) 2003  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
//  CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS 
// 
//  This library is free software; you can redistribute it and/or 
//  modify it under the terms of the GNU Lesser General Public 
//  License as published by the Free Software Foundation; either 
//  version 2.1 of the License. 
// 
//  This library is distributed in the hope that it will be useful, 
//  but WITHOUT ANY WARRANTY; without even the implied warranty of 
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
//  Lesser General Public License for more details. 
// 
//  You should have received a copy of the GNU Lesser General Public 
//  License along with this library; if not, write to the Free Software 
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA 
// 
// See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
//
//
//
//  File   : SALOME_RessourcesCatalog.idl
//  Author : Estelle Deville
//  $Header$

module SALOME_RessourcesCatalog{
  // Type Definitions

  //Proc_info : information about a processor
  struct proc_info{
    long number;
    string model_name;
    float cpu_mhz;
    float cache_size;
  };

  typedef sequence<proc_info> ListOfProc;

  //Computer_info : information about a computer
  // Os and informations about processors
  struct computer_info{
    string name;
    string OS;
    string OS_version;
    ListOfProc procs;
  };

  enum ContainerType {Cpp, python, NP};
  typedef sequence<ContainerType> ListOfContainerType;

  typedef sequence<string> ListOfComputer;

  // exception thrown if a computer is not found in the catalog 

  exception NotFound {};

  //------------------------------------------------------------------
  //Interface
  interface RessourcesCatalog {
    ListOfComputer GetComputerList();
    ListOfContainerType GetContainerTypeList (in string computer) raises(NotFound);
    computer_info GetComputerInfo(in string computer) raises(NotFound);
  };
};
