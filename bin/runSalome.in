#! /bin/sh

PYTHON_VERSION=python@PYTHON_VERSION@

# you must define SALOME_ROOT_DIR and SALOME_SITE_DIR (if you need it)

if test -n $SALOME_ROOT_DIR
then
  export PATH=$SALOME_ROOT_DIR/bin/salome:${PATH}
  export LD_LIBRARY_PATH=$SALOME_ROOT_DIR/lib/salome:${LD_LIBRARY_PATH}
  export PYTHONPATH=${SALOME_ROOT_DIR}/lib/salome:${SALOME_ROOT_DIR}/lib/$PYTHON_VERSION/site-packages/salome:${SALOME_ROOT_DIR}/share/salome/resources:${PYTHONPATH}
  # add bin, because some script are in (SALOME_SWIG) !!!!
  export PYTHONPATH=${SALOME_ROOT_DIR}/bin/salome:${PYTHONPATH}
   echo "#############################################"
   echo $PATH
   echo "------------------------"
   echo $LD_LIBRARY_PATH
   echo "------------------------"
   echo $PYTHONPATH
   echo "#############################################"
fi
if test -n $SALOME_SITE_DIR
then
  export PATH=$SALOME_SITE_DIR/bin/salome:${PATH}
  export LD_LIBRARY_PATH=$SALOME_SITE_DIR/lib/salome:${LD_LIBRARY_PATH}
  export PYTHONPATH=${SALOME_SITE_DIR}/lib/salome:${SALOME_SITE_DIR}/lib/$PYTHON_VERSION/site-packages/salome:${SALOME_SITE_DIR}/share/salome/resources:${PYTHONPATH}
fi

if test -d $HOME/Salome/bin/salome
then
  export PATH=$HOME/Salome/bin/salome:${PATH}
fi
if test -d $HOME/Salome/lib/salome
then
  export LD_LIBRARY_PATH=$HOME/Salome/lib/salome:${LD_LIBRARY_PATH}
fi

# Open CASCADE Application Framework - OCAF
export CSF_PluginDefaults=${KERNEL_ROOT_DIR}/share/salome/resources
export CSF_SALOMEDS_ResourcesDefaults=${KERNEL_ROOT_DIR}/share/salome/resources
#export CSF_ResourceVerbose=1
#export CSF_RepeatServerRequest=10

if test -n $GEOM_ROOT_DIR
then
  export CSF_GEOMDS_ResourcesDefaults=${GEOM_ROOT_DIR}/share/salome/resources
fi

export tmp=/tmp

echo "runSession standalone on ${HOSTNAME}"
allkill

echo "Starting runNS.sh"
runNS.sh
sleep 2

echo "Starting SALOME_Logger_Server $1"
SALOME_Logger_Server $1 &
sleep 2

echo "Starting SALOME_Registry_Server"
SALOME_Registry_Server --salome_session theSession &
#sleep 2

echo "Starting SALOMEDS_Server"
SALOMEDS_Server&
#sleep 2

echo "Starting SALOME_ModuleCatalog_Server -common ${SALOME_ROOT_DIR}/share/salome/resources/CatalogModuleGeneral.xml -personal ${HOME}/Salome/resources/CatalogModulePersonnel.xml"
SALOME_ModuleCatalog_Server \
 -common ${KERNEL_ROOT_DIR}/share/salome/resources/KERNELCatalog.xml:\
${GEOM_ROOT_DIR}/share/salome/resources/GEOMCatalog.xml:\
${SUPERV_ROOT_DIR}/share/salome/resources/SUPERVCatalog.xml:\
${VISU_ROOT_DIR}/share/salome/resources/VISUCatalog.xml:\
${MED_ROOT_DIR}/share/salome/resources/MEDCatalog.xml:\
${SMESH_ROOT_DIR}/share/salome/resources/SMESHCatalog.xml \
 -personal ${HOME}/Salome/resources/CatalogModulePersonnel.xml &
#sleep 2

echo "Starting SALOME_Session_Server"
SALOME_Session_Server&
#sleep 2

echo "Starting runNotify.sh"
notifd -c ${SALOME_ROOT_DIR}/share/salome/resources/channel.cfg -DFactoryIORFileName=/tmp/${LOGNAME}_rdifact.ior -DChannelIORFileName=/tmp/${LOGNAME}_rdichan.ior&

echo "SALOME_Container FactoryServer -ORBInitRef NameService=corbaname::localhost"
SALOME_Container FactoryServer -ORBInitRef NameService=corbaname::localhost &

echo "SALOME_ContainerPy.py FactoryServerPy -ORBInitRef NameService=corbaname::localhost"
SALOME_ContainerPy.py FactoryServerPy -ORBInitRef NameService=corbaname::localhost &

echo "SALOME_Container SuperVisionContainer -ORBInitRef NameService=corbaname::localhost"
SALOME_Container SuperVisionContainer -ORBInitRef NameService=corbaname::localhost &

echo "Starting SALOME_Session_loader"
SALOME_Session_loader&

echo "--------------------------------------------------------------------------------"
echo "|                                                                              |"
echo "|  read README file on this directory for configuration and launch of SALOME   |"
echo "|                                                                              |"
echo "--------------------------------------------------------------------------------"

