# Copyright (C) 2007-2016  CEA/DEN, EDF R&D, OPEN CASCADE
#
# Copyright (C) 2003-2007  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
# CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
#

# common directories to put headerfiles
#
inc_builddir=$(top_builddir)/include/salome

@SET_MAKE@
# Modifcation B. Secher portage sur osf
SHELL=@SHELL@

# header missing

HAVE_SSTREAM=@HAVE_SSTREAM@

MODULE_NAME=@MODULE_NAME@

LIBS=@LIBS@ 
LIBSFORBIN=@LIBS@
LDFLAGS=@LDFLAGS@  -L$(top_builddir)/lib@LIB_LOCATION_SUFFIX@/salome
LDFLAGSFORBIN=@LDFLAGS@ -L$(top_builddir)/lib@LIB_LOCATION_SUFFIX@/salome
# add libstdc++ to link c++ library with libtool !
LDFLAGS+= @STDLIB@
LDFLAGSFORBIN+= @STDLIB@

#CP=@CP@

# CPP

CPP=@CPP@
CXXCPP=@CXXCPP@
CPPFLAGS=@CPPFLAGS@ -I$(inc_builddir) -I$(srcdir) -I.

# C

CC = @CC@
CFLAGS = @CFLAGS@
C_DEPEND_FLAG = @C_DEPEND_FLAG@

# C++

CXX = @CXX@
CXXFLAGS = @CXXFLAGS@
CXX_DEPEND_FLAG = @CXX_DEPEND_FLAG@

# BOOST Library

BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LIBSUFFIX = @BOOST_LIBSUFFIX@
BOOST_LIBS = @BOOST_LIBS@

# OpenPBS

OPENPBS_INCLUDES = @OPENPBS_INCLUDES@
OPENPBS_LIBDIR   = @OPENPBS_LIBDIR@
OPENPBS_LIBS     = @OPENPBS_LIBS@

# LSF

LSF_INCLUDES = @LSF_INCLUDES@
LSF_LIBDIR   = @LSF_LDFLAGS@
LSF_LIBS     = @LSF_LIBS@

# CPPUNIT

CPPUNIT_INCLUDES = @CPPUNIT_INCLUDES@
CPPUNIT_LIBS = @CPPUNIT_LIBS@

# PYTHON

PYTHON = @PYTHON@
PYTHONHOME = @PYTHONHOME@
PYTHON_INCLUDES = @PYTHON_INCLUDES@
PYTHON_LIBS = @PYTHON_LIBS@
PYTHON_VERSION = @PYTHON_VERSION@
PYTHON_SITE = $(prefix)/lib@LIB_LOCATION_SUFFIX@/python$(PYTHON_VERSION)/site-packages
PYTHON_SITE_INSTALL = $(prefix)/lib@LIB_LOCATION_SUFFIX@/python$(PYTHON_VERSION)/site-packages/salome

# QT
QT_ROOT = @QT_ROOT@
QT_INCLUDES = @QT_INCLUDES@
QT_MT_INCLUDES = @QT_INCLUDES@ -DQT_THREAD_SUPPORT
QT_LIBS = @QT_LIBS@
QT_MT_LIBS = @QT_MT_LIBS@
QT_VERS = @QT_VERS@

MOC = @MOC@
UIC = @UIC@

# msg2qm
MSG2QM = @MSG2QM@

#QWT

QWT_INCLUDES=@QWT_INCLUDES@
QWT_LIBS=@QWT_LIBS@

# SIP
SIP = @SIP@
SIP_INCLUDES = @SIP_INCLUDES@
SIP_LIBS = @SIP_LIBS@
SIP_VERS = @SIP_VERS@

# PYQT
PYQT_SIPS = @PYQT_SIPS@
PYQT_LIBS = @PYQT_LIBS@
PYQT_INCLUDES = @PYQT_INCLUDES@
PYUIC = @PYUIC@
PYQT_SIPFLAGS = @PYQT_SIPFLAGS@

# openGL
OGL_INCLUDES=@OGL_INCLUDES@
OGL_LIBS=@OGL_LIBS@

# VTK
VTK_INCLUDES=@VTK_INCLUDES@
VTK_LIBS=@VTK_LIBS@

# HDF5

HDF5_INCLUDES=@HDF5_INCLUDES@
HDF5_LIBS=@HDF5_LIBS@
HDF5_MT_LIBS=@HDF5_MT_LIBS@

# OpenCasCade

OCC_INCLUDES=@CAS_CPPFLAGS@
OCC_CXXFLAGS=@CAS_CXXFLAGS@

CAS_KERNEL=@CAS_KERNEL@
CAS_MATH=@CAS_MATH@
CAS_OCAF=@CAS_OCAF@
CAS_OCAFVIS=@CAS_OCAFVIS@
CAS_TKTopAlgo=@CAS_TKTopAlgo@
CAS_VIEWER=@CAS_VIEWER@
CAS_MODELER=@CAS_MODELER@
CAS_DATAEXCHANGE=@CAS_DATAEXCHANGE@
CAS_LDPATH=@CAS_LDPATH@

# MPI

MPI_INCLUDES=@MPI_INCLUDES@
MPI_LIBS=@MPI_LIBS@

# Swig C++ Python

SWIG       = @SWIG@
SWIG_FLAGS = @SWIG_FLAGS@ -I$(inc_builddir) -I$(srcdir) -I.

# OMNIORB

OMNIORB_ROOT        = @OMNIORB_ROOT@
OMNIORB_INCLUDES    = @OMNIORB_INCLUDES@
OMNIORB_LIBS        = @OMNIORB_LIBS@
OMNIORB_CXXFLAGS    = @OMNIORB_CXXFLAGS@

OMNIORB_IDL         = @OMNIORB_IDL@
OMNIORB_IDLCXXFLAGS = @OMNIORB_IDLCXXFLAGS@
OMNIORB_IDLPYFLAGS  = @OMNIORB_IDLPYFLAGS@ -I$(top_builddir)/salome/idl

OMNIORB_IDL_CLN_H   = @OMNIORB_IDL_CLN_H@
OMNIORB_IDL_CLN_CXX = @OMNIORB_IDL_CLN_CXX@
OMNIORB_IDL_CLN_OBJ = @OMNIORB_IDL_CLN_OBJ@

OMNIORB_IDL_SRV_H   = @OMNIORB_IDL_SRV_H@
OMNIORB_IDL_SRV_CXX = @OMNIORB_IDL_SRV_CXX@
OMNIORB_IDL_SRV_OBJ = @OMNIORB_IDL_SRV_OBJ@

# Default ORB

CORBA_ROOT        = @CORBA_ROOT@
CORBA_INCLUDES    = @CORBA_INCLUDES@
CORBA_LIBS        = @CORBA_LIBS@
CORBA_CXXFLAGS    = @CORBA_CXXFLAGS@

IDLCXXFLAGS = -bcxx @IDLCXXFLAGS@ -I$(top_builddir)/salome/idl
IDLPYFLAGS  = @IDLPYFLAGS@

IDL = @IDL@

IDL_CLN_H   = @IDL_CLN_H@
IDL_CLN_CXX = @IDL_CLN_CXX@
IDL_CLN_OBJ = @IDL_CLN_OBJ@

IDL_SRV_H   = @IDL_SRV_H@
IDL_SRV_CXX = @IDL_SRV_CXX@
IDL_SRV_OBJ = @IDL_SRV_OBJ@

CPPFLAGS+= $(CORBA_INCLUDES) 
CXXFLAGS+= $(CORBA_CXXFLAGS)

# add corba libs when link salome application ! 
#LDFLAGS+= $(CORBA_LIBS)
LIBS+=$(CORBA_LIBS)
LIBSFORBIN+=$(CORBA_LIBS)

DOXYGEN = @DOXYGEN@

## Shared libraries
#LT_STATIC_EXEC=@LT_STATIC_EXEC@
#DYNAMIC_DIRS=@DYNAMIC_DIRS@
LT_LIB=libtool
LT=$(top_builddir)/libtool
LT_COMPILE=$(LT) --mode=compile $(CC)
LT_LINK_LIB=$(LT_LIB) --mode=link $(CC) -rpath $(libdir)
LT_LINK_EXE=$(LT) --mode=link $(CC) $(LT_STATIC_EXEC) -dlopen self -rpath $(bindir) $(DYNAMIC_DIRS)
LT_RUN=$(LT) --mode=execute
LT_INSTALL_PROG=$(LT) --mode=install $(INSTALL_PROGRAM)
LT_INSTALL_LIB=$(LT) --mode=install $(INSTALL_DATA)
LT_UNINSTALL=$(LT) --mode=uninstall $(RM)

INSTALL=@INSTALL@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
INSTALL_DATA=@INSTALL_DATA@

# create a symbolic link (or a copie ?)
LN_S=@LN_S@

KERNEL_ROOT_DIR=@KERNEL_ROOT_DIR@
KERNEL_SITE_DIR=@KERNEL_SITE_DIR@
KERNEL_LDFLAGS=@KERNEL_LDFLAGS@
KERNEL_CXXFLAGS=@KERNEL_CXXFLAGS@

## Installation points
prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@exec_prefix@/bin/salome
libdir=@exec_prefix@/lib@LIB_LOCATION_SUFFIX@/salome
# warning : if user give this path in configure we could have salome/salome :-(
includedir=@includedir@/salome
datadir=@datadir@/salome
idldir=${prefix}/idl/salome
sharedpydir=@exec_prefix@/lib@LIB_LOCATION_SUFFIX@/python$(PYTHON_VERSION)/site-packages/salome/shared_modules
incmakedir=${prefix}/salome_adm/unix

docdir=${prefix}/doc/salome

#
# begin of package rules
#

.PHONY: all lib bin inc resources data docs tests install uninstall dep depend depend_idl cleandep mostlyclean clean distclean

.SUFFIXES: .cxx .cc .c .f .o .lo .idl .py .i .ui .po .qm

all:
	$(MAKE) inc
	$(MAKE) depend_idl
	$(MAKE) depend
	$(MAKE) lib
	$(MAKE) bin
	$(MAKE) resources
	$(MAKE) data

#
# add target to build administrative files
#

# Building html from restructured text files
STYLESHEET=rst.css
RST2HTML=@RST2HTML@
#RSTOPTS=--output-encoding=latin1 --stylesheet=$(STYLESHEET)
RSTOPTS=--output-encoding=latin1

%.html: $(srcdir)/%.txt
	$(RST2HTML) $(RSTOPTS) $< $@
